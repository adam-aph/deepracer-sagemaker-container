FROM awsdeepracercommunity/deepracer-sagemaker:gpu

ENV COACH_BACKEND=tensorflow

RUN pip install -U pip
RUN pip uninstall tensorflow
WORKDIR /opt

# RUN apt-get remove cuda-toolkit-9-0

# RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-ubuntu1604.pin
# RUN wget http://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda-repo-ubuntu1604-10-2-local-10.2.89-440.33.01_1.0-1_amd64.deb

COPY ./files/cuda-ubuntu1604.pin /etc/apt/preferences.d/cuda-repository-pin-600
COPY ./files/cuda-ubuntu1604.pin /etc/apt/preferences.d/cuda-repository-pin-600
COPY ./files/cuda-repo-ubuntu1604-10-2-local-10.2.89-440.33.01_1.0-1_amd64.deb /opt
RUN dpkg -i /opt/cuda-repo-ubuntu1604-10-2-local-10.2.89-440.33.01_1.0-1_amd64.deb
RUN apt-key add /var/cuda-repo-10-2-local-10.2.89-440.33.01/7fa2af80.pub
RUN apt-get update
RUN apt-get -y install cuda-toolkit-10-2

COPY ./files/libcudnn7_7.6.5.32-1+cuda10.2_amd64.deb /opt
RUN dpkg -i libcudnn7_7.6.5.32-1+cuda10.2_amd64.deb

COPY ./files/tensorflow-1.15.3-cp36-cp36m-linux_x86_64.whl /opt
RUN pip install tensorflow-1.15.3-cp36-cp36m-linux_x86_64.whl

COPY ./files/tflms-2.0.2-py3-none-any.whl /opt
RUN pip install tflms-2.0.2-py3-none-any.whl

ENV PYTHONPATH /opt/amazon/:$PYTHONPATH
ENV PATH /opt/ml/code/:$PATH
WORKDIR /opt/ml/code

# Tell sagemaker-containers where the launch point is for training job.
ENV NODE_TYPE SAGEMAKER_TRAINING_WORKER

ENV PYTHONUNBUFFERED 1
# Starts framework
ENTRYPOINT ["bash", "-m", "start.sh", "train"]
